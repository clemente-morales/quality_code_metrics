<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- To configure the module check the page http://checkstyle.sf.net  -->
<module name="Checker">
    <property name="localeCountry" value="US"/>

    <property name="localeLanguage" value="EN"/>

    <!--Configure checker to handle files with the UTF-8 charset-->
    <property name="charset" value="UTF-8"/>


    <module name="FileLength">
        <property name="max" value="1000"/>
    </module>
    <module name="FileTabCharacter"/>
    <module name="JavadocPackage">
        <property name="severity" value="info"/>
    </module>
    <module name="NewlineAtEndOfFile">
        <property name="severity" value="info"/>
    </module>
    <module name="UniqueProperties">
        <property name="fileExtensions" value="properties"/>
    </module>

    <!--Configuration for java source files-->
    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>
        <property name="fileExtensions" value="aidl"/>
        <property name="fileExtensions" value="java"/>

        <!-- Block checks -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock">
            <property name="severity" value="warning"/>
        </module>
        <module name="LeftCurly"/>
        <module name="RightCurly"/>
        <module name="NeedBraces"/>

        <!-- Class design -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType">
            <property name="allowMarkerInterfaces" value="true"/>
        </module>
        <module name="MutableException"/>

        <!-- Coding -->
        <!-- String b = (a==null || a.length<1) ? null : a.substring(1); -->
        <module name="AvoidInlineConditionals">
            <property name="severity" value="warning"/>
        </module>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MultipleStringLiterals"/>


        <!--Checks for illegal instantiations where a factory method is preferred.-->
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>
        <module
            name="IllegalThrows"/> <!-- throws java.lang.Error or java.lang.RuntimeException is almost never acceptable. -->

        <module name="MissingSwitchDefault"/>
        <module
            name="IllegalCatch"/> <!-- Catching java.lang.Exception, java.lang.Error or java.lang.RuntimeException is almost never acceptable -->
        <module
            name="ModifiedControlVariable"/> <!-- loop control variables are not modified inside the for block -->

        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <!--it doesn't allow more than three return statements per method (ignoring the equals() method)-->
        <module name="ReturnCount">
            <property name="max" value="3"/>
        </module>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>

        <!-- Imports -->
        <module
            name="AvoidStarImport"/><!-- no import statements that use the * notation leads to tight coupling between packages or classes -->
        <module name="IllegalImport"/>
        <!--Controls what can be imported in each package. Useful for ensuring
        that application layering rules are not violated, especially on large projects.-->
        <module name="ImportControl">
            <!--<property name="file" value="setup/import-control.xml"/>-->
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Javadoc Comments -->
        <!--
            public scope and to allow documentation of undeclared RuntimeExceptions.
            Any method that is public needs to be documented-->
        <module name="JavadocMethod">
            <property name="scope" value="public"/>
            <property name="severity" value="info"/>
            <property name="allowUndeclaredRTE" value="true"/>
        </module>
        <module name="JavadocStyle">
            <property name="severity" value="info"/>
        </module>
        <!-- Any class or interface that is public needs to be documented -->
        <module name="JavadocType">
            <property name="severity" value="info"/>
            <property name="scope" value="public"/>
        </module>


        <!-- Metrics -->
        <!-- number of &&, || -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="3"/>
        </module>
        <!-- number of other classes a given class relies on -->
        <module name="ClassFanOutComplexity">
            <property name="severity" value="warning"/>
            <property name="max" value="10"/>
        </module>
        <!-- By pure theory level 1-4 is considered easy to test, 5-7 OK,
        8-10 consider re-factoring to ease testing,
        and 11+ re-factor now as testing will be painful. -->
        <module name="CyclomaticComplexity">
            <property name="max" value="15"/>
        </module>


        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters">
            <property name="severity" value="warning"/>
        </module>
        <module name="Indentation">
            <property name="severity" value="info"/>
        </module>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment">
            <property name="format" value="(TODO)|(FIXME)"/>
            <property name="severity" value="info"/>
        </module>
        <!-- requires that comments be the only thing on a line.
        a = b + c;      // Some insightful comment (invalid)-->
        <module name="TrailingComment">
            <property name="format" value="^\\s*$"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Naming Conventions -->
        <!-- validate abbreviations(consecutive capital letters) length in identifier name -->
        <module name="AbbreviationAsWordInName">
            <property name="tokens" value="VARIABLE_DEF,CLASS_DEF"/>
            <property name="ignoreStatic" value="false"/>
            <!-- allowed amount of capital letters -->
            <property name="allowedAbbreviationLength" value="1"/>
            <property name="allowedAbbreviations" value="XML,URL"/>
        </module>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName">
            <property name="severity" value="info"/>
        </module>
        <module name="LocalVariableName">
            <property name="severity" value="info"/>
        </module>
        <module name="MemberName">
            <property name="severity" value="info"/>
        </module>
        <module name="StaticVariableName">
            <property name="severity" value="info"/>
        </module>
        <module name="TypeName">
            <property name="severity" value="info"/>
        </module>
        <module name="MethodName">
            <property name="severity" value="info"/>
        </module>
        <module name="PackageName">
            <property name="severity" value="info"/>
        </module>
        <module name="ParameterName">
            <property name="severity" value="info"/>
        </module>

        <!-- Size Violations -->
        <!-- If an anonymous inner class becomes very long it is hard to
        understand and to see the flow of the method where the class is defined.-->
        <module name="AnonInnerLength">
            <property name="max" value="40"/>
        </module>
        <module name="LineLength">
            <property name="max" value="100"/>
            <!--ignore lines that begin with " * ", followed by just one word-->
            <property name="ignorePattern" value="^ *\* *[^ ]+$"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="60"/>
        </module>
        <module name="ParameterNumber">
            <property name="max" value="6"/>
        </module>


    </module>
</module>
